docker run -v /data
> ls /data # пусто
# католог /data в контейнере том
docker inspect -f {{.Mounts}} container

представляет собой что-то вроде симлинка
~ VOLUME в Dockerfile

docker run -v host_point:containter_point
# не поддерижвается в dockerfile из-за угрозы безопасности и не переносимости
# if каталог уже есть в контейнере - перекрывается хостовым
# не удаляется dockerrm -v
# монтирование каталогов как фс(bind mounting)(хотя формально все тома каталоги)
# в отличие от volume - задает явное расположение, а не хранится в каталогах докера
# удобен для разделяемых данных
# для файлов mount point в контейнере дб абсолютным
# если смонтировать файл не в абс путь - err, если смонтировать файл отностиельно - будет воспринято как директория в текущем каталоге, возможно не сущ

--volumes-from
# работает и с лежащим контейнером

том нельзя удалить, пока его использует хоть один контейнер

docker ps -a --filter volume=VOLUME_NAME_OR_MOUNT_POINT

docker run -v a:hi
# создаст папку a:hi в контейнере
docker run -v a:/hi
создаст папку a: c папкой hi
т.е путь должен явно указываться как относительный|абсолютный